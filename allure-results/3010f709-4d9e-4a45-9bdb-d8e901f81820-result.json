{"name": "test_login_valido", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//span[@class='title'][contains(.,'Products')]\"}\n  (Session info: chrome=139.0.7258.155); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#nosuchelementexception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7ccb13d85+79397]\n\tGetHandleVerifier [0x0x7ff7ccb13de0+79488]\n\t(No symbol) [0x0x7ff7cc8bc0fa]\n\t(No symbol) [0x0x7ff7cc912fd6]\n\t(No symbol) [0x0x7ff7cc91328c]\n\t(No symbol) [0x0x7ff7cc966537]\n\t(No symbol) [0x0x7ff7cc93b1df]\n\t(No symbol) [0x0x7ff7cc963344]\n\t(No symbol) [0x0x7ff7cc93af73]\n\t(No symbol) [0x0x7ff7cc9041b1]\n\t(No symbol) [0x0x7ff7cc904f43]\n\tGetHandleVerifier [0x0x7ff7ccdde1ed+3005069]\n\tGetHandleVerifier [0x0x7ff7ccdd831d+2980797]\n\tGetHandleVerifier [0x0x7ff7ccdf7e0d+3110573]\n\tGetHandleVerifier [0x0x7ff7ccb2d6de+184190]\n\tGetHandleVerifier [0x0x7ff7ccb3516f+215567]\n\tGetHandleVerifier [0x0x7ff7ccb1c974+115220]\n\tGetHandleVerifier [0x0x7ff7ccb1cb29+115657]\n\tGetHandleVerifier [0x0x7ff7ccb03268+11016]\n\tBaseThreadInitThunk [0x0x7ffe9de5e8d7+23]\n\tRtlUserThreadStart [0x0x7ffe9eddc34c+44]", "trace": "self = <tests_login.test_01_login_valido.TestLoginValido object at 0x00000176DB563250>\n\n    def test_login_valido(self):\n        self.driver = conftest.driver\n        login_page = LoginPage()\n        home_page = HomePage()\n        login_page.fazer_login(\"geysonsilva@teste.com\",\"Abcd1234\")\n    \n        # Verifica se o login foi realizado\n>       home_page.verificar_login_com_sucesso()\n\ntests_login\\test_01_login_valido.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\home_page.py:14: in verificar_login_com_sucesso\n    self.verificar_se_elemento_existe(self.titulo_pagina)\npages\\base_page.py:23: in verificar_se_elemento_existe\n    assert self.encontrar_elemento(locator).is_displayed(), f\"O elemento '{locator}' n√£o foi encontrado na tela.\"\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npages\\base_page.py:11: in encontrar_elemento\n    return self.driver.find_element(*locator)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:926: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:458: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000176DB5B27B0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...ff7ccb03268+11016]\\\\n\\\\tBaseThreadInitThunk [0x0x7ffe9de5e8d7+23]\\\\n\\\\tRtlUserThreadStart [0x0x7ffe9eddc34c+44]\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//span[@class='title'][contains(.,'Products')]\"}\nE         (Session info: chrome=139.0.7258.155); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#nosuchelementexception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7ccb13d85+79397]\nE       \tGetHandleVerifier [0x0x7ff7ccb13de0+79488]\nE       \t(No symbol) [0x0x7ff7cc8bc0fa]\nE       \t(No symbol) [0x0x7ff7cc912fd6]\nE       \t(No symbol) [0x0x7ff7cc91328c]\nE       \t(No symbol) [0x0x7ff7cc966537]\nE       \t(No symbol) [0x0x7ff7cc93b1df]\nE       \t(No symbol) [0x0x7ff7cc963344]\nE       \t(No symbol) [0x0x7ff7cc93af73]\nE       \t(No symbol) [0x0x7ff7cc9041b1]\nE       \t(No symbol) [0x0x7ff7cc904f43]\nE       \tGetHandleVerifier [0x0x7ff7ccdde1ed+3005069]\nE       \tGetHandleVerifier [0x0x7ff7ccdd831d+2980797]\nE       \tGetHandleVerifier [0x0x7ff7ccdf7e0d+3110573]\nE       \tGetHandleVerifier [0x0x7ff7ccb2d6de+184190]\nE       \tGetHandleVerifier [0x0x7ff7ccb3516f+215567]\nE       \tGetHandleVerifier [0x0x7ff7ccb1c974+115220]\nE       \tGetHandleVerifier [0x0x7ff7ccb1cb29+115657]\nE       \tGetHandleVerifier [0x0x7ff7ccb03268+11016]\nE       \tBaseThreadInitThunk [0x0x7ffe9de5e8d7+23]\nE       \tRtlUserThreadStart [0x0x7ffe9eddc34c+44]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchElementException"}, "start": 1756319090827, "stop": 1756319101202, "uuid": "40297472-c460-48b2-ac4c-030b7a8e6095", "historyId": "c256af473372999a0923fad251923889", "testCaseId": "c256af473372999a0923fad251923889", "fullName": "tests_login.test_01_login_valido.TestLoginValido#test_login_valido", "labels": [{"name": "tag", "value": "login"}, {"name": "parentSuite", "value": "tests_login"}, {"name": "suite", "value": "test_01_login_valido"}, {"name": "subSuite", "value": "TestLoginValido"}, {"name": "host", "value": "notebooktonygeyson"}, {"name": "thread", "value": "21572-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests_login.test_01_login_valido"}], "titlePath": ["tests_login", "test_01_login_valido.py", "TestLoginValido"]}